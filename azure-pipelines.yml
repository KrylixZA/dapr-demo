trigger:
  branches:
    include:
      - '*'
  paths:
    include:
      - '*'

variables:
  MAJOR_VERSION: 0
  MINOR_VERSION: 0
  PATCH_VERSION: 1

name: $(MAJOR_VERSION).$(MINOR_VERSION).$(PATCH_VERSION).$(Rev:r)

stages:
- stage: ContinuousIntegration
  displayName: 'Continuous Integration'
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: SetBuildNumber
    displayName: 'Set build number'
    steps:
    - checkout: none
    
    - task: PowerShell@2
      displayName: Set build number
      inputs:
        targetType: 'inline'
        script: |
          $branchName = "$(Build.SourceBranchName)";
          $buildTrigger = "$(Build.Reason)";
          $buildVersion = "$(Build.BuildNumber)";
          Write-Host "Branch name:    $branchName";
          Write-Host "Build trigger:  $buildTrigger";
          Write-Host "Build version:  $buildVersion";
          if (-not($buildVersion.Contains($branchName) -or $buildVersion.Contains($buildTrigger))) {
            $nugetPkgVersion = $buildVersion;
            if (-not([string]::IsNullOrWhiteSpace($branchName)) -and ($branchName -ne "main")) {
              $nugetPkgVersion = "$nugetPkgVersion-$branchName";
            }
            Write-Host "Package version: $nugetPkgVersion";
            Write-Host "##vso[build.updateBuildNumber]$nugetPkgVersion";
          } 
          else {
            Write-Host "Package version: $buildVersion";
          }

  - job: Build
    dependsOn: SetBuildNumber
    steps:
      - task: Docker@2
        displayName: 'Docker login'
        inputs:
          containerRegistry: 'Dapr Container Registry'
          command: 'login'

      - task: Docker@2
        displayName: 'Docker build'
        inputs:
          containerRegistry: 'Dapr Container Registry'
          repository: 'dapr-demo/order-api'
          command: 'build'
          Dockerfile: '$(Build.SourcesDirectory)/src/OrderApi/Dockerfile'
          buildContext: '$(Build.SourcesDirectory)/src'
          tags: '$(Build.BuildNumber)'

      - task: Docker@2
        displayName: 'Docker push'
        inputs:
          containerRegistry: 'Dapr Container Registry'
          repository: 'dapr-demo/order-api'
          command: 'push'
          tags: '$(Build.BuildNumber)'

- stage: ContinuousDelivery
  displayName: 'Continuous Delivery'
  dependsOn: ContinuousIntegration
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: Deploy
    steps:
    - task: AzureContainerApps@0
      inputs:
        azureSubscription: 'Free Trial(85e5b8d9-d15f-4db3-bfaf-c97182b7cc0b)'
        acrName: 'daprcontainerappsregistry12345'
        containerAppName: 'dapr-demo-order-api'
        resourceGroup: 'dapr-container-apps-environment'
        imageToDeploy: 'daprcontainerappsregistry12345.azurecr.io/dapr-demo/order-api:$(Build.BuildNumber)'
        